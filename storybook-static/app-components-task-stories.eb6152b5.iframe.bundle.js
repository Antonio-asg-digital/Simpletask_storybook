"use strict";(self.webpackChunktaskbox=self.webpackChunktaskbox||[]).push([[285],{"./src/app/components/task.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var tslib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let TaskComponent=class TaskComponent{constructor(){this.onPinTask=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.onArchiveTask=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter}onPin(id){this.onPinTask.emit(id)}onArchive(id){this.onArchiveTask.emit(id)}static#_=this.propDecorators={task:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],onPinTask:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output}],onArchiveTask:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output}]}};TaskComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_1__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Component)({selector:"app-task",template:'\n    <div class="list-item {{ task?.state }}">\n      <label\n        [attr.aria-label]="\'archiveTask-\' + task?.id"\n        for="checked-{{ task?.id }}"\n        class="checkbox"\n      >\n        <input\n          type="checkbox"\n          disabled="true"\n          [defaultChecked]="task?.state === \'TASK_ARCHIVED\'"\n          name="checked-{{ task?.id }}"\n          id="checked-{{ task?.id }}"\n        />\n        <span class="checkbox-custom" (click)="onArchive(task?.id)"></span>\n      </label>\n      <label\n        [attr.aria-label]="task?.title + \'\'"\n        for="title-{{ task?.id }}"\n        class="title"\n      >\n        <input\n          type="text"\n          [value]="task?.title"\n          readonly="true"\n          id="title-{{ task?.id }}"\n          name="title-{{ task?.id }}"\n          placeholder="Input title"\n        />\n      </label>\n      <button\n        *ngIf="task?.state !== \'TASK_ARCHIVED\'"\n        class="pin-button"\n        [attr.aria-label]="\'pinTask-\' + task?.id"\n        (click)="onPin(task?.id)"\n      >\n        <span class="icon-star"></span>\n      </button>\n    </div>\n  '})],TaskComponent);const __WEBPACK_DEFAULT_EXPORT__=TaskComponent},"./src/app/components/task.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Archived:()=>Archived,Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={component:__webpack_require__("./src/app/components/task.component.ts").A,title:"Task",tags:["autodocs"],render:args=>({props:{...args,onPinTask:()=>{},onArchiveTask:()=>{}},template:'<app-task [task]="task" (onPinTask)="onPinTask($event)" (onArchiveTask)="onArchiveTask($event)"></app-task>'})},Default={args:{task:{id:"1",title:"Task 1",state:"TASK_INBOX"}}},Archived={args:{task:{id:"2",title:"Archived Task",state:"TASK_ARCHIVED"}}},__namedExportsOrder=["Default","Archived"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    task: {\n      id: '1',\n      title: 'Task 1',\n      state: 'TASK_INBOX'\n    }\n  }\n}",...Default.parameters?.docs?.source}}},Archived.parameters={...Archived.parameters,docs:{...Archived.parameters?.docs,source:{originalSource:"{\n  args: {\n    task: {\n      id: '2',\n      title: 'Archived Task',\n      state: 'TASK_ARCHIVED'\n    }\n  }\n}",...Archived.parameters?.docs?.source}}}}}]);